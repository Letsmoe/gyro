import { COLORS, color } from "./color.js";
function generateHelp(optionList, usageString) {
    const maxLength = (arrString) => arrString.reduce((acc, curr) => curr.length > acc ? curr.length : acc, 0);
    const writePadded = (str, max) => str.padEnd(max + 3);
    const writeArray = (arr) => {
        let lenName = maxLength(arr.map(x => x[0]));
        let lenAlias = maxLength(arr.map(x => x[1]));
        let lenDesc = maxLength(arr.map(x => x[2]));
        let lenType = maxLength(arr.map(x => x[3]));
        let lenCallback = maxLength(arr.map(x => x[4]));
        for (const item of arr) {
            process.stdout.write(writePadded(item[0], lenName) + writePadded(item[1], lenAlias) + writePadded(item[2], lenDesc) + writePadded(item[3], lenType) + writePadded(item[4], lenCallback) + "\n");
        }
    };
    let arr = [];
    for (const key in optionList) {
        let val = optionList[key];
        arr.push([color((val.callback ? "" : "--") + key, COLORS.CYAN), color(val.alias ? "-" + val.alias : "", COLORS.YELLOW), val.desc, val.type ? `[${val.type.toUpperCase()}]` : "", val.callback ? color("[COMMAND]", COLORS.GREEN) : ""]);
    }
    process.stdout.write(usageString + "\n\n");
    writeArray(arr);
    process.exit(0);
}
export { generateHelp };
